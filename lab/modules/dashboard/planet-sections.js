// planet-sections.js ‚Äì Fonctions de rendu pour les blocs dynamiques du dashboard
import { MOON_DATA } from './moon-database.js';
import { COLONIZATION_STATUS } from './colonization-status.js';

// üìã INFORMATIONS
export function renderBasicInfo(data) {
  return `
    <p>Nom : ${data.name || '‚Äî'}</p>
    <p>Distance : ${data.distance || '‚Äî'}</p>
    <p>Diam√®tre : ${data.radius || '‚Äî'}</p>
    <p>Temp√©rature : ${data.temp || '‚Äî'}</p>
  `;
}

export function renderComposition(data) {
  return data.composition
    ? `<p><strong>Composition :</strong><br>${data.composition}</p>`
    : `<p>‚Äî</p>`;
}

export function renderClimate(data) {
  return data.climate
    ? `<p><strong>Climat :</strong><br>${data.climate}</p>`
    : `<p>Temp√©rature moyenne : ${data.temp || '‚Äî'}</p>`;
}

// üèôÔ∏è COLONISATION (nouvelle version)
export function renderColonizationState(data) {
  const status = data.colonization?.status || '‚Äî';
  return `<p>√âtat de colonisation : ${status}</p>`;
}

export function renderColonizationPotentials(data) {
  return data.colonization?.potentials
    ? `<p><strong>Potentiels :</strong><br>${data.colonization.potentials}</p>`
    : `<p>Potentiels : Donn√©es manquantes</p>`;
}

export function renderColonizationPhase(data) {
  return data.colonization?.phase
    ? `<p><strong>Phase actuelle :</strong><br>${data.colonization.phase}</p>`
    : `<p>Phase actuelle : Donn√©es manquantes</p>`;
}

export function renderColonizationBases(data) {
  const bases = data.colonization?.bases;
  if (Array.isArray(bases) && bases.length > 0) {
    return `<p><strong>Bases ou robots pr√©sents :</strong><br>${bases.join(', ')}</p>`;
  }
  return `<p>Aucune base connue</p>`;
}

// üåô (le reste suivra dans les √©tapes suivantes)
export function renderMoonSummary({ planetKey }) {
  const moons = MOON_DATA[planetKey];
  if (!moons || moons.length === 0) return "<p>Aucune lune d√©tect√©e</p>";

  const html = moons.map(m => {
    const line = [`<strong>${m.name}</strong>`];
    if (m.diameter) line.push(m.diameter);
    if (m.composition) line.push(m.composition);
    return `<p>${line.join(" ‚Äî ")}</p>`;
  }).join('');

  return html;
}

export function renderMoonDetails({ planetKey }) {
  const moons = MOON_DATA[planetKey];
  if (!moons || moons.length === 0) return "<p>Aucune lune d√©tect√©e</p>";

  return moons.map(m => {
    return `
      <div class="moon-block">
        <p><strong>${m.name}</strong></p>
        ${m.image ? `<img src="/lab/modules/dashboard/img/moons/${m.image}" alt="${m.name}" style="max-width: 80px; border-radius: 8px;" />` : ''}
        <p>Diam√®tre : ${m.diameter || '‚Äî'}</p>
        <p>Orbite : ${m.orbit || '‚Äî'}</p>
        ${m.period ? `<p>P√©riode orbitale : ${m.period}</p>` : ''}
        ${m.composition ? `<p>Composition : ${m.composition}</p>` : ''}
        ${m.description ? `<p>${m.description}</p>` : ''}
      </div>
      <hr style="opacity: 0.1;">
    `;
  }).join('');
}
